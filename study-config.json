{
    "$schema": "schemas/0.1.0/study-config.schema.json",
    "datasets": {
        "kotlin": "2021 Aug/Kotlin"
    },
    "queries": {
        "kotlin/hashes.txt": {
            "query": "queries/hashes.boa",
            "dataset": "kotlin",
            "gendupes": {
                "output": "kotlin/dupes.txt",
                "csv": "kotlin/dupes.csv"
            }
        },
        "kotlin/basic-usage.txt": {
            "query": "queries/basic-usage.boa",
            "dataset": "kotlin",
            "make_public": true,
	    "substitutions": [
		{
		    "target": "{@time-or-snapshot@}",
		    "replacement": "before node: CodeRepository -> {\n        # Output zeroes as necessary\n        kinds :=  { \"return_val\", \"module\", \"body\", \"loop_variable\", \"lambda_arg\" };\n        foreach (i: int; def(kinds[i])) {\n            o[input.id]{@time-part@}[\"DUMMYDUMMYDUMMY.kt\"][kinds[i]][false][false] << 0;\n            o[input.id]{@time-part@}[\"DUMMYDUMMYDUMMY.kt\"][kinds[i]][false][true] << 0;\n            o[input.id]{@time-part@}[\"DUMMYDUMMYDUMMY.kt\"][kinds[i]][true][false] << 0;\n            o[input.id]{@time-part@}[\"DUMMYDUMMYDUMMY.kt\"][kinds[i]][true][true] << 0;\n        }\n        snapshot := getsnapshot(node, \"SOURCE_KOTLIN_1_\");\n        foreach (i: int; def(snapshot[i]))\n            visit(snapshot[i]);\n        stop;\n    }"
		}
	    ],
            "csv": {
                "output": "kotlin/basic-usage.csv",
                "drop": [ 0 ],
                "header": "project,file,location,isval,isinferred,count",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
	"kotlin/over-time.txt": {
            "query": "queries/basic-usage.boa",
            "dataset": "kotlin",
            "make_public": true,
	    "substitutions": [
		{
		    "target": "{@time-out@}",
		    "replacement": "[revision: string][outtime: time]"
		},
		{
		    "target": "{@time-part@}",
		    "replacement": "[current(Revision).id][current(Revision).commit_date]"
		},
		{
		    "target": "{@time-or-snapshot@}",
		    "replacement": "before node: Revision -> {\n        # Output zeroes as necessary\n        kinds :=  { \"return_val\", \"module\", \"body\", \"loop_variable\", \"lambda_arg\" };\n        foreach (i: int; def(kinds[i])) {\n            o[input.id][\"DUMMYDUMMYDUMMY.kt\"]{@time-part@}[kinds[i]][false][false] << 0;\n            o[input.id][\"DUMMYDUMMYDUMMY.kt\"]{@time-part@}[kinds[i]][false][true] << 0;\n            o[input.id][\"DUMMYDUMMYDUMMY.kt\"]{@time-part@}[kinds[i]][true][false] << 0;\n            o[input.id][\"DUMMYDUMMYDUMMY.kt\"]{@time-part@}[kinds[i]][true][true] << 0;\n        }\n    }"
		},
		{
		    "target": "{@project-filter@}",
		    "replacement": "if ((nrand(100) % 5) == 0)"
		}
	    ],
            "csv": {
                "output": "kotlin/over-time.csv",
                "drop": [ 0 ],
                "header": "project,file,revision,time,location,isval,isinferred,count",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "kotlin/count-unfiltered.txt": {
            "query": "queries/count-projects.boa",
            "dataset": "kotlin",
            "make_public": true,
            "substitutions": [
                {
                    "target": "{@project-filter@}",
                    "replacement": "is_filtered := false;"
                }
            ],
            "csv": {
                "output": "kotlin/count-unfiltered.csv",
                "drop": [ 0 ],
                "header": "type,filtered,count"
            }
        },
        "kotlin/count-filtered.txt": {
            "query": "queries/count-projects.boa",
            "dataset": "kotlin",
            "make_public": true,
            "csv": {
                "output": "kotlin/count-filtered.csv",
                "drop": [ 0 ],
                "header": "type,filtered,count"
            }
        }
    },
    "analyses": {
        "table-counts.py": {
            "input": [
                "kotlin/count-unfiltered.csv",
                "kotlin/count-filtered.csv"
            ]
        },
        "rq-mutability.py": {
            "input": [
                "kotlin/basic-usage.csv",
                "kotlin/dupes.csv"
            ]
        },
        "rq-usage.py": {
            "input": [
                "kotlin/basic-usage.csv",
                "kotlin/dupes.csv"
            ]
        },
	"rq-over-time.py": {
	    "input": [
		"kotlin/over-time.csv",
		"kotlin/dupes.csv"
	    ]
	}
    },
    "substitutions": [
        {
            "target": "{@escape@}",
            "file": "escape.boa"
        },
        {
            "target": "{@project-filter@}",
            "replacement": "is_filtered := true;\nif ((nrand(100) % 5) == 0)"
        },
	{
	    "target": "{@time-out@}",
	    "replacement": ""
	},
	{
	    "target": "{@time-part@}",
	    "replacement": ""
	},
	{
	    "target": "{@time-or-snapshot@}",
	    "replacement": ""
	}
    ]
}
