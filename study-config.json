{
    "$schema": "schemas/0.1.1/study-config.schema.json",
    "datasets": {
        "kotlin": "2021 Aug/Kotlin",
        "java": "2022 Jan/Java"
    },
    "queries": {
        "kotlin/hashes.txt": {
            "query": "queries/common/hashes.boa",
            "dataset": "kotlin",
            "substitutions": [
                {
                    "target": "{@file-selector@}",
                    "replacement": "SOURCE_KOTLIN_1_"
                }
            ],
            "gendupes": {
                "output": "kotlin/dupes.txt",
                "csv": "kotlin/dupes.csv"
            }
        },
        "kotlin/basic-usage.txt": {
            "query": "queries/kotlin/basic-usage.boa",
            "dataset": "kotlin",
            "substitutions": [
                {
                    "target": "{@time-or-snapshot@}",
                    "file": "snapshot-with-zeros.boa"
                }
            ],
            "csv": {
                "output": "kotlin/basic-usage.csv",
                "drop": [
                    0
                ],
                "header": "project,file,location,isval,isinferred,count",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "kotlin/over-time.txt": {
            "query": "queries/kotlin/basic-usage.boa",
            "dataset": "kotlin",
            "substitutions": [
                {
                    "target": "{@time-out@}",
                    "replacement": "[revision: string][outtime: time]"
                },
                {
                    "target": "{@time-part@}",
                    "replacement": "[current(Revision).id][current(Revision).commit_date]"
                },
                {
                    "target": "{@time-or-snapshot@}",
                    "file": "zeros.boa"
                },
                {
                    "target": "{@random-sample@}",
                    "replacement": "if ((nrand(100) % 5) != 0) keep = false;"
                }
            ],
            "csv": {
                "output": "kotlin/over-time.csv",
                "drop": [
                    0
                ],
                "header": "project,file,revision,time,location,isval,isinferred,count",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "kotlin/counts.txt": {
            "query": "queries/common/count-projects.boa",
            "dataset": "kotlin",
            "substitutions": [
                {
                    "target": "{@file-selector@}",
                    "replacement": "SOURCE_KOTLIN_1_"
                }
            ],
            "csv": {
                "output": "kotlin/counts.csv",
                "drop": [
                    0
                ],
                "header": "type,filtered,count"
            }
        },
        "kotlin/survival.txt": {
            "query": "queries/kotlin/survival.boa",
            "dataset": "kotlin",
            "csv": {
                "output": "kotlin/survival.csv",
                "drop": [
                    0
                ],
                "header": "project,file,item,location,startinferred,changekind,observed,timetochange",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "kotlin/determine-rhs-expression-types.txt": {
            "query": "queries/kotlin/determine-rhs-expression-types.boa",
            "dataset": "kotlin",
            "csv": {
                "output": "kotlin/determine-rhs-expression-types.csv",
                "drop": [
                    0
                ],
                "header": "project,file,class,isinferred,expkind",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "kotlin/method-calls-maybe-local.txt": {
            "query": "queries/kotlin/method-calls-maybe-local.boa",
            "dataset": "kotlin",
            "csv": {
                "output": "kotlin/method-calls-maybe-local.csv",
                "drop": [
                    0
                ],
                "header": "project,file,item,maybelocal",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "java/hashes.txt": {
            "query": "queries/common/hashes.boa",
            "dataset": "java",
            "substitutions": [
                {
                    "target": "{@file-selector@}",
                    "replacement": "SOURCE_JAVA_JLS"
                }
            ],
            "gendupes": {
                "output": "java/dupes.txt",
                "csv": "java/dupes.csv"
            }
        },
        "java/basic-usage.txt": {
            "query": "queries/java/basic-usage.boa",
            "dataset": "java",
            "substitutions": [
                {
                    "target": "{@time-or-snapshot@}",
                    "file": "snapshot-with-zeros.boa"
                }
            ],
            "csv": {
                "output": "java/basic-usage.csv",
                "drop": [
                    0
                ],
                "header": "project,file,location,isval,isinferred,count",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "java/over-time.txt": {
            "query": "queries/java/basic-usage.boa",
            "dataset": "java",
            "substitutions": [
                {
                    "target": "{@time-out@}",
                    "replacement": "[revision: string][outtime: time]"
                },
                {
                    "target": "{@time-part@}",
                    "replacement": "[current(Revision).id][current(Revision).commit_date]"
                },
                {
                    "target": "{@random-sample@}",
                    "replacement": "if ((nrand(100) % 5) != 0) keep = false;"
                }
            ],
            "csv": {
                "output": "java/over-time.csv",
                "drop": [
                    0
                ],
                "header": "project,file,revision,time,location,isval,isinferred,count",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "java/counts.txt": {
            "query": "queries/common/count-projects.boa",
            "dataset": "java",
            "substitutions": [
                {
                    "target": "{@file-selector@}",
                    "replacement": "SOURCE_JAVA_JLS"
                }
            ],
            "csv": {
                "output": "java/counts.csv",
                "drop": [
                    0
                ],
                "header": "type,filtered,count"
            }
        },
        "java/survival.txt": {
            "query": "queries/java/survival.boa",
            "dataset": "java",
            "csv": {
                "output": "java/survival.csv",
                "drop": [
                    0
                ],
                "header": "project,file,item,location,startinferred,changekind,observed,timetochange",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "java/determine-rhs-expression-types.txt": {
            "query": "queries/java/determine-rhs-expression-types.boa",
            "dataset": "java",
            "csv": {
                "output": "java/determine-rhs-expression-types.csv",
                "drop": [
                    0
                ],
                "header": "project,file,class,isinferred,expkind",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        },
        "java/method-calls-maybe-local.txt": {
            "query": "queries/java/method-calls-maybe-local.boa",
            "dataset": "java",
            "csv": {
                "output": "java/method-calls-maybe-local.csv",
                "drop": [
                    0
                ],
                "header": "project,file,item,maybelocal",
                "test": [
                    "2,\\.kts?$"
                ]
            }
        }
    },
    "analyses": {
        "kotlin/table-counts.py": {
            "input": [
                "kotlin/counts.csv"
            ]
        },
        "kotlin/rq-mutability.py": {
            "input": [
                "kotlin/basic-usage.csv",
                "kotlin/dupes.csv"
            ]
        },
        "kotlin/rq-usage.py": {
            "input": [
                "kotlin/basic-usage.csv",
                "kotlin/dupes.csv"
            ]
        },
        "kotlin/rq-over-time.py": {
            "input": [
                "kotlin/over-time.csv",
                "kotlin/dupes.csv"
            ]
        },
        "kotlin/rq-survival.py": {
            "input": [
                "kotlin/survival.csv",
                "kotlin/dupes.csv"
            ]
        },
        "kotlin/rq-rhs-types.py": {
            "input": [
                "kotlin/determine-rhs-expression-types.csv"
            ]
        },
        "kotlin/rq-rhs-methodcalls.py": {
            "input": [
                "kotlin/method-calls-maybe-local.csv",
                "kotlin/dupes.csv"
            ]
        },
        "java/table-counts.py": {
            "input": [
                "java/counts.csv"
            ]
        },
        "java/rq-mutability.py": {
            "input": [
                "java/basic-usage.csv",
                "java/dupes.csv"
            ]
        },
        "java/rq-usage.py": {
            "input": [
                "java/basic-usage.csv",
                "java/dupes.csv"
            ]
        },
        "java/rq-over-time.py": {
            "input": [
                "java/over-time.csv",
                "java/dupes.csv"
            ]
        },
        "java/rq-survival.py": {
            "input": [
                "java/survival.csv",
                "java/dupes.csv"
            ]
        },
        "java/rq-rhs-types.py": {
            "input": [
                "java/determine-rhs-expression-types.csv"
            ]
        },
        "java/rq-rhs-methodcalls.py": {
            "input": [
                "java/method-calls-maybe-local.csv",
                "java/dupes.csv"
            ]
        }
    },
    "substitutions": [
        {
            "target": "{@escape@}",
            "file": "escape.boa"
        },
        {
            "target": "{@project-filter@}",
            "file": "filter.boa"
        },
        {
            "target": "{@get-method-signature@}",
            "file": "get-method-signature.boa"
        },
        {
            "target": "{@time-out@}",
            "replacement": ""
        },
        {
            "target": "{@time-part@}",
            "replacement": ""
        },
        {
            "target": "{@random-sample@}",
            "replacement": ""
        }
    ]
}