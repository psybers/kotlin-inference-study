default_imports: set of string;
default_functions: set of string;

add(default_imports, "Annotation");
add(default_imports, "Any");
add(default_imports, "Array");
add(default_imports, "ArrayIndexOutOfBoundsException");
add(default_imports, "Boolean");
add(default_imports, "BooleanArray");
add(default_imports, "Byte");
add(default_imports, "ByteArray");
add(default_imports, "Char");
add(default_imports, "CharArray");
add(default_imports, "CharSequence");
add(default_imports, "Comparable");
add(default_imports, "Comparator");
add(default_imports, "DeepRecursiveFunction");
add(default_imports, "DeepRecursiveScope");
add(default_imports, "DeprecationLevel");
add(default_imports, "Double");
add(default_imports, "DoubleArray");
add(default_imports, "Enum");
add(default_imports, "Float");
add(default_imports, "FloatArray");
add(default_imports, "Function");
add(default_imports, "Int");
add(default_imports, "IntArray");
add(default_imports, "KotlinVersion");
add(default_imports, "Lazy");
add(default_imports, "LazyThreadSafetyMode");
add(default_imports, "Long");
add(default_imports, "LongArray");
add(default_imports, "Nothing");
add(default_imports, "Number");
add(default_imports, "OutOfMemoryError");
add(default_imports, "Pair");
add(default_imports, "Result");
add(default_imports, "Short");
add(default_imports, "ShortArray");
add(default_imports, "String");
add(default_imports, "Throwable");
add(default_imports, "Triple");
add(default_imports, "UByte");
add(default_imports, "UByteArray");
add(default_imports, "UInt");
add(default_imports, "UIntArray");
add(default_imports, "ULong");
add(default_imports, "ULongArray");
add(default_imports, "Unit");
add(default_imports, "UShort");
add(default_imports, "UShortArray");
add(default_imports, "AnnotationRetention");
add(default_imports, "AnnotationTarget");
add(default_imports, "AbstractCollection");
add(default_imports, "AbstractIterator");
add(default_imports, "AbstractList");
add(default_imports, "AbstractMap");
add(default_imports, "AbstractMutableCollection");
add(default_imports, "AbstractMutableList");
add(default_imports, "AbstractMutableMap");
add(default_imports, "AbstractMutableSet");
add(default_imports, "AbstractSet");
add(default_imports, "ArrayDeque");
add(default_imports, "ArrayList");
add(default_imports, "BooleanIterator");
add(default_imports, "ByteIterator");
add(default_imports, "CharIterator");
add(default_imports, "Collection");
add(default_imports, "DoubleIterator");
add(default_imports, "FloatIterator");
add(default_imports, "Grouping");
add(default_imports, "HashMap");
add(default_imports, "HashSet");
add(default_imports, "IndexedValue");
add(default_imports, "IntInterator");
add(default_imports, "Iterable");
add(default_imports, "Iterator");
add(default_imports, "LinkedHashMap");
add(default_imports, "LinkedHashSet");
add(default_imports, "List");
add(default_imports, "ListIterator");
add(default_imports, "LongIterator");
add(default_imports, "Map");
add(default_imports, "MutableCollection");
add(default_imports, "MutableIterable");
add(default_imports, "MutableList");
add(default_imports, "MutableListIterator");
add(default_imports, "MutableMap");
add(default_imports, "MutableSet");
add(default_imports, "RandomAccess");
add(default_imports, "Set");
add(default_imports, "ShortIterator");
add(default_imports, "FileTreeWalk");
add(default_imports, "FileWalkDirection");
add(default_imports, "OnErrorAction");
add(default_imports, "AccessDeniedException");
add(default_imports, "FileAlreadyExistsException");
add(default_imports, "FileSystemException");
add(default_imports, "NoSuchFileException");
add(default_imports, "CharProgression");
add(default_imports, "CharRange");
add(default_imports, "ClosedFloatingPointRange");
add(default_imports, "ClosedRange");
add(default_imports, "IntProgression");
add(default_imports, "IntRange");
add(default_imports, "LongProgression");
add(default_imports, "LongRange");
add(default_imports, "UIntProgression");
add(default_imports, "UIntRange");
add(default_imports, "ULongProgression");
add(default_imports, "ULongRange");
add(default_imports, "Sequence");
add(default_imports, "SequenceScope");
add(default_imports, "Appendable");
add(default_imports, "CharCategory");
add(default_imports, "CharDirectionality");
add(default_imports, "Charsets");
add(default_imports, "MatchGroup");
add(default_imports, "MatchGroupCollection");
add(default_imports, "MatchNamedGroupCollection");
add(default_imports, "MatchResult");
add(default_imports, "Regex");
add(default_imports, "RegexOption");
add(default_imports, "StringBuilder");
add(default_imports, "Typography");
add(default_imports, "CharacterCodingException");
add(default_imports, "JvmRepeatable");
add(default_imports, "Console");
add(default_imports, "Date");
add(default_imports, "JsClass");
add(default_imports, "Json");
add(default_imports, "JSON");
add(default_imports, "Promise");
add(default_imports, "RegExp");
add(default_imports, "RegExpMatch");

add(default_functions, "add");
add(default_functions, "asArray");
add(default_functions, "asDynamic");
add(default_functions, "dateLocaleOptions");
add(default_functions, "eval");
add(default_functions, "get");
add(default_functions, "iterator");
add(default_functions, "js");
add(default_functions, "json");
add(default_functions, "jsTypeOf");
add(default_functions, "parseFloat");
add(default_functions, "parseInt");
add(default_functions, "reset");
add(default_functions, "then");
add(default_functions, "unsafeCast");
add(default_functions, "isArrayOf");
add(default_functions, "all");
add(default_functions, "any");
add(default_functions, "asIterable");
add(default_functions, "asSequence");
add(default_functions, "associate");
add(default_functions, "associateBy");
add(default_functions, "associateByTo");
add(default_functions, "associateTo");
add(default_functions, "associateWith");
add(default_functions, "associateWithTo");
add(default_functions, "average");
add(default_functions, "chunked");
add(default_functions, "constrainOnce");
add(default_functions, "contains");
add(default_functions, "count");
add(default_functions, "distinct");
add(default_functions, "distinctBy");
add(default_functions, "drop");
add(default_functions, "dropWhile");
add(default_functions, "elementAt");
add(default_functions, "elementAtOrElse");
add(default_functions, "elementAtOrNull");
add(default_functions, "emptySequence");
add(default_functions, "filter");
add(default_functions, "filterIndexed");
add(default_functions, "filterIndexedTo");
add(default_functions, "filterIsInstance");
add(default_functions, "filterIsInstanceTo");
add(default_functions, "filterNot");
add(default_functions, "filterNotNull");
add(default_functions, "filterNotNullTo");
add(default_functions, "filterTo");
add(default_functions, "find");
add(default_functions, "findLast");
add(default_functions, "first");
add(default_functions, "firstNotNullOf");
add(default_functions, "firstNotNullOfOrNull");
add(default_functions, "firstOrNull");
add(default_functions, "flatMap");
add(default_functions, "flatMapIndexed");
add(default_functions, "flatMapIndexedTo");
add(default_functions, "flatMapTo");
add(default_functions, "flatten");
add(default_functions, "fold");
add(default_functions, "foldIndexed");
add(default_functions, "forEach");
add(default_functions, "forEachIndexed");
add(default_functions, "generateSequence");
add(default_functions, "groupBy");
add(default_functions, "groupByTo");
add(default_functions, "groupingBy");
add(default_functions, "groupingBy");
add(default_functions, "ifEmpty");
add(default_functions, "indexOf");
add(default_functions, "indexOfFirst");
add(default_functions, "indexOfLast");
add(default_functions, "iterator");
add(default_functions, "joinTo");
add(default_functions, "joinToString");
add(default_functions, "last");
add(default_functions, "lastIndexOf");
add(default_functions, "lastOrNull");
add(default_functions, "map");
add(default_functions, "mapIndexed");
add(default_functions, "mapIndexedNotNull");
add(default_functions, "mapIndexedNotNullTo");
add(default_functions, "mapIndexedTo");
add(default_functions, "mapNotNull");
add(default_functions, "mapNotNullTo");
add(default_functions, "mapTo");
add(default_functions, "max");
add(default_functions, "maxBy");
add(default_functions, "maxByOrNull");
add(default_functions, "maxOf");
add(default_functions, "maxOfOrNull");
add(default_functions, "maxOfWith");
add(default_functions, "maxOfWithOrNull");
add(default_functions, "maxOrNull");
add(default_functions, "maxWith");
add(default_functions, "maxWithOrNull");
add(default_functions, "min");
add(default_functions, "minBy");
add(default_functions, "minByOrNull");
add(default_functions, "minOf");
add(default_functions, "minOfOrNull");
add(default_functions, "minOfWith");
add(default_functions, "minOfWithOrNull");
add(default_functions, "minOrNull");
add(default_functions, "minWith");
add(default_functions, "minWithOrNull");
add(default_functions, "minus");
add(default_functions, "minusElement");
add(default_functions, "none");
add(default_functions, "onEach");
add(default_functions, "onEachIndexed");
add(default_functions, "orEmpty");
add(default_functions, "partition");
add(default_functions, "plus");
add(default_functions, "plusElement");
add(default_functions, "reduce");
add(default_functions, "reduceIndexed");
add(default_functions, "reduceIndexedOrNull");
add(default_functions, "reduceOrNull");
add(default_functions, "requireNoNulls");
add(default_functions, "runningFold");
add(default_functions, "runningFoldIndexed");
add(default_functions, "runningReduce");
add(default_functions, "runningReduceIndexed");
add(default_functions, "scan");
add(default_functions, "scanIndexed");
add(default_functions, "sequence");
add(default_functions, "sequenceOf");
add(default_functions, "shuffled");
add(default_functions, "single");
add(default_functions, "singleOrNull");
add(default_functions, "sorted");
add(default_functions, "sortedBy");
add(default_functions, "sortedByDescending");
add(default_functions, "sortedDescending");
add(default_functions, "sortedWith");
add(default_functions, "sum");
add(default_functions, "sumBy");
add(default_functions, "sumByDouble");
add(default_functions, "sumOf");
add(default_functions, "take");
add(default_functions, "takeWhile");
add(default_functions, "toCollection");
add(default_functions, "toHashSet");
add(default_functions, "toList");
add(default_functions, "toMutableList");
add(default_functions, "toMutableSet");
add(default_functions, "toSet");
add(default_functions, "toSortedSet");
add(default_functions, "unzip");
add(default_functions, "windowed");
add(default_functions, "withindex");
add(default_functions, "zip");
add(default_functions, "zipWithNext");
add(default_functions, "coerceAtLeast");
add(default_functions, "coerceAtMost");
add(default_functions, "coerceIn");
add(default_functions, "contains");
add(default_functions, "downTo");
add(default_functions, "first");
add(default_functions, "firstOrNull");
add(default_functions, "last");
add(default_functions, "lastOrNull");
add(default_functions, "random");
add(default_functions, "randomOrNull");
add(default_functions, "rangeTo");
add(default_functions, "reversed");
add(default_functions, "step");
add(default_functions, "until");
add(default_functions, "byteInputStream");
add(default_functions, "createTempDir");
add(default_functions, "createTempFile");
add(default_functions, "inputStream");
add(default_functions, "print");
add(default_functions, "println");
add(default_functions, "reader");
add(default_functions, "readLine");
add(default_functions, "readln");
add(default_functions, "readlnOrNull");
add(default_functions, "use");
add(default_functions, "compareBy");
add(default_functions, "compareByDescending");
add(default_functions, "compareValues");
add(default_functions, "compareValuesBy");
add(default_functions, "maxOf");
add(default_functions, "minOf");
add(default_functions, "naturalOrder");
add(default_functions, "nullsFirst");
add(default_functions, "nullsLast");
add(default_functions, "reversed");
add(default_functions, "reverseOrder");
add(default_functions, "then");
add(default_functions, "thenBy");
add(default_functions, "thenByDescending");
add(default_functions, "thenComparator");
add(default_functions, "thenDescending");
add(default_functions, "addAll");
add(default_functions, "aggregate");
add(default_functions, "aggregateTo");
add(default_functions, "all");
add(default_functions, "any");
add(default_functions, "arrayListOf");
add(default_functions, "asByteArray");
add(default_functions, "asIntArray");
add(default_functions, "asIterable");
add(default_functions, "asList");
add(default_functions, "asLongArray");
add(default_functions, "asReversed");
add(default_functions, "asSequence");
add(default_functions, "asShortArray");
add(default_functions, "associate");
add(default_functions, "associateBy");
add(default_functions, "associateByTo");
add(default_functions, "associateTo");
add(default_functions, "associateWith");
add(default_functions, "associateWithTo");
add(default_functions, "asUByteArray");
add(default_functions, "asUIntArray");
add(default_functions, "asULongArray");
add(default_functions, "asUShortArray");
add(default_functions, "average");
add(default_functions, "binarySearch");
add(default_functions, "binarySearchBy");
add(default_functions, "buildList");
add(default_functions, "buildMap");
add(default_functions, "buildSet");
add(default_functions, "chunked");
add(default_functions, "component1");
add(default_functions, "component2");
add(default_functions, "component3");
add(default_functions, "component4");
add(default_functions, "component5");
add(default_functions, "contains");
add(default_functions, "containsAll");
add(default_functions, "containsKey");
add(default_functions, "containsValue");
add(default_functions, "contentDeepEquals");
add(default_functions, "contentDeepHashCode");
add(default_functions, "contentDeepToString");
add(default_functions, "contentEquals");
add(default_functions, "contentHashCode");
add(default_functions, "contentToString");
add(default_functions, "contentToString");
add(default_functions, "copyInto");
add(default_functions, "copyOf");
add(default_functions, "copyOfRange");
add(default_functions, "count");
add(default_functions, "distinct");
add(default_functions, "distinctBy");
add(default_functions, "drop");
add(default_functions, "dropLast");
add(default_functions, "dropLastWhile");
add(default_functions, "dropWhile");
add(default_functions, "eachCount");
add(default_functions, "eachCountTo");
add(default_functions, "elementAt");
add(default_functions, "elementAtOrElse");
add(default_functions, "elementAtOrNull");
add(default_functions, "emptyList");
add(default_functions, "emptyMap");
add(default_functions, "emptySet");
add(default_functions, "fill");
add(default_functions, "filter");
add(default_functions, "filterIndexed");
add(default_functions, "filterIndexedTo");
add(default_functions, "filterIsInstance");
add(default_functions, "filterIsInstanceTo");
add(default_functions, "filterKeys");
add(default_functions, "filterNot");
add(default_functions, "filterNotNull");
add(default_functions, "filterNotNullTo");
add(default_functions, "filterNotTo");
add(default_functions, "filterTo");
add(default_functions, "filterValues");
add(default_functions, "find");
add(default_functions, "findLast");
add(default_functions, "first");
add(default_functions, "firstNotNullOf");
add(default_functions, "firstNotNullOfOrNull");
add(default_functions, "firstOrNull");
add(default_functions, "flatMap");
add(default_functions, "flatMapIndexed");
add(default_functions, "flatMapIndexedTo");
add(default_functions, "flatMapTo");
add(default_functions, "flatten");
add(default_functions, "fold");
add(default_functions, "foldIndexed");
add(default_functions, "foldRight");
add(default_functions, "foldRightIndexed");
add(default_functions, "foldTo");
add(default_functions, "forEach");
add(default_functions, "forEachIndexed");
add(default_functions, "get");
add(default_functions, "getOrDefault");
add(default_functions, "getOrElse");
add(default_functions, "getOrNull");
add(default_functions, "getOrPut");
add(default_functions, "getValue");
add(default_functions, "groupBy");
add(default_functions, "groupByTo");
add(default_functions, "groupingBy");
add(default_functions, "hashMapOf");
add(default_functions, "hashSetOf");
add(default_functions, "ifEmpty");
add(default_functions, "indexOf");
add(default_functions, "indexOfFirst");
add(default_functions, "indexOfLast");
add(default_functions, "intersect");
add(default_functions, "isEmpty");
add(default_functions, "isNotEmpty");
add(default_functions, "isNullOrEmpty");
add(default_functions, "iterator");
add(default_functions, "joinTo");
add(default_functions, "joinToString");
add(default_functions, "addSuppressed");
add(default_functions, "also");
add(default_functions, "apply");
add(default_functions, "arrayOf");
add(default_functions, "arrayOfNulls");
add(default_functions, "assert");
add(default_functions, "booleanArrayOf");
add(default_functions, "byteArrayOf");
add(default_functions, "Char");
add(default_functions, "charArrayOf");
add(default_functions, "check");
add(default_functions, "checkNotNull");
add(default_functions, "compareTo");
add(default_functions, "countLeadingZeroBits");
add(default_functions, "countOneBits");
add(default_functions, "countTrailingZeroBits");
add(default_functions, "doubleArrayOf");
add(default_functions, "emptyArray");
add(default_functions, "enumValueOf");
add(default_functions, "enumValues");
add(default_functions, "error");
add(default_functions, "floatArrayOf");
add(default_functions, "floorDiv");
add(default_functions, "fold");
add(default_functions, "getOrDefault");
add(default_functions, "getOrElse");
add(default_functions, "getOrThrow");
add(default_functions, "getValue");
add(default_functions, "hashCode");
add(default_functions, "intArrayOf");
add(default_functions, "invoke");
add(default_functions, "isFinite");
add(default_functions, "isInfinite");
add(default_functions, "isNan");
add(default_functions, "lazy");
add(default_functions, "lazyOf");
add(default_functions, "let");
add(default_functions, "longArrayOf");
add(default_functions, "map");
add(default_functions, "mapCatching");
add(default_functions, "mod");
add(default_functions, "onFailure");
add(default_functions, "onSuccess");
add(default_functions, "plus");
add(default_functions, "printStackTrace");
add(default_functions, "recover");
add(default_functions, "recoverCatching");
add(default_functions, "repeat");
add(default_functions, "require");
add(default_functions, "requireNotNull");
add(default_functions, "rotateLeft");
add(default_functions, "rotateRight");
add(default_functions, "run");
add(default_functions, "runCatching");
add(default_functions, "setValue");
add(default_functions, "shortArrayOf");
add(default_functions, "stackTraceToString");
add(default_functions, "suspend");
add(default_functions, "synchronized");
add(default_functions, "suspend");
add(default_functions, "takeHighestOneBit");
add(default_functions, "takeIf");
add(default_functions, "takeLowestOneBit");
add(default_functions, "takeUnless");
add(default_functions, "to");
add(default_functions, "toBigDecimal");
add(default_functions, "toBigInteger");
add(default_functions, "toBits");
add(default_functions, "TODO");
add(default_functions, "toList");
add(default_functions, "toRawBits");
add(default_functions, "toString");
add(default_functions, "toUByte");
add(default_functions, "toUInt");
add(default_functions, "toULong");
add(default_functions, "toUShort");
add(default_functions, "uByteArrayOf");
add(default_functions, "uintArrayOf");
add(default_functions, "ulongArrayOf");
add(default_functions, "use");
add(default_functions, "ushortArrayOf");
add(default_functions, "with");